import os
import asyncio
import logging
from aiogram import Bot, Dispatcher, types
from aiogram.types import Message
from aiogram.filters import Command
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ –∏–∑ .env
load_dotenv()
TOKEN = os.getenv("7843959820:AAFvfy9Sk5U5TZqP3aeRGBxH-qd2t1eloQE")

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–æ—Ç–∞
bot = Bot(token=TOKEN)
dp = Dispatcher()

# –ù–∞—á–∞–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
GOAL_AMOUNT = 70000  # –¶–µ–ª—å –ø–æ –¥–µ–Ω—å–≥–∞–º
DAYS_LIMIT = 16  # –°–∫–æ–ª—å–∫–æ –¥–Ω–µ–π –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ
progress = {"earned": 0}

# –°–ø–∏—Å–æ–∫ —Å–æ–≤–µ—Ç–æ–≤ –ø–æ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
TIPS = [
    "–ù–µ –æ—Ç–≤–ª–µ–∫–∞–π—Å—è –Ω–∞ —Å–æ—Ü—Å–µ—Ç–∏ ‚Äî –ª—É—á—à–µ –∑–∞—Ä–∞–±–æ—Ç–∞–π –µ—â—ë –Ω–µ–º–Ω–æ–≥–æ!",
    "–†–∞–∑–±–µ–π –∑–∞–¥–∞—á—É –Ω–∞ –º–∞–ª–µ–Ω—å–∫–∏–µ —à–∞–≥–∏ –∏ —Å–¥–µ–ª–∞–π –ø–µ—Ä–≤—ã–π –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å.",
    "–û—Ç–¥—ã—Ö —Ç–æ–∂–µ –≤–∞–∂–µ–Ω! –ù–æ —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ —Ö–æ—Ä–æ—à–µ–π —Ä–∞–±–æ—Ç—ã.",
    "–ò—Å–ø–æ–ª—å–∑—É–π —Ç–µ—Ö–Ω–∏–∫—É –ü–æ–º–æ–¥–æ—Ä–æ: 25 –º–∏–Ω—É—Ç —Ä–∞–±–æ—Ç—ã, 5 –º–∏–Ω—É—Ç –æ—Ç–¥—ã—Ö–∞.",
    "–ù–µ –±–æ–π—Å—è –ø—Ä–æ—Å–∏—Ç—å –±–æ–ª—å—à–µ –¥–µ–Ω–µ–≥ –∑–∞ —Å–≤–æ–π —Ç—Ä—É–¥!",
    "–ó–∞–Ω–∏–º–∞–π—Å—è —Å–∞–º–æ–¥–∏—Å—Ü–∏–ø–ª–∏–Ω–æ–π ‚Äî —ç—Ç–æ –∫–ª—é—á –∫ —É—Å–ø–µ—Ö—É.",
    "–§–æ–∫—É—Å–∏—Ä—É–π—Å—è –Ω–∞ –≤–∞–∂–Ω—ã—Ö –∑–∞–¥–∞—á–∞—Ö, –∞ –Ω–µ –Ω–∞ —Å—Ä–æ—á–Ω—ã—Ö."
]

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∑–∞—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –¥–µ–Ω–µ–≥
@dp.message(Command("money"))
async def add_money(message: Message):
    try:
        amount = int(message.text.split()[1])
        progress["earned"] += amount
        await message.reply(f"üí∞ –î–µ–Ω—á–∏–∫ –∑–∞—Ä–∞–±–æ—Ç–∞–ª {amount} —Ä.! –í—Å–µ–≥–æ: {progress['earned']} —Ä.")
    except (IndexError, ValueError):
        await message.reply("–û—à–∏–±–∫–∞! –ò—Å–ø–æ–ª—å–∑—É–π —Ñ–æ—Ä–º–∞—Ç: /money X, –≥–¥–µ X - —Å—É–º–º–∞.")

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
@dp.message(Command("status"))
async def check_status(message: Message):
    remaining_money = GOAL_AMOUNT - progress["earned"]
    remaining_days = DAYS_LIMIT - (message.date.day % DAYS_LIMIT)  # –ü—Ä–∏–º–µ—Ä —Ä–∞—Å—á–µ—Ç–∞ –¥–Ω–µ–π
    
    if remaining_money <= 0:
        await message.reply("üî• –î–µ–Ω—á–∏–∫ –¥–æ—Å—Ç–∏–≥ —Ü–µ–ª–∏! –ú–æ–ª–æ–¥–µ—Ü!")
    else:
        await message.reply(f"üìä –û—Å—Ç–∞–ª–æ—Å—å –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å: {remaining_money} —Ä.\n‚è≥ –î–Ω–µ–π –¥–æ –∫–æ–Ω—Ü–∞: {remaining_days}")

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –º–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Å–æ–≤–µ—Ç–∞
@dp.message(Command("god"))
async def get_tip(message: Message):
    from random import choice
    tip = choice(TIPS)
    await message.reply(f"üß† –°–æ–≤–µ—Ç –¥–Ω—è: {tip}")

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    logging.basicConfig(level=logging.INFO)
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
